Mon Dec  6 21:48:45 2021    profiling.txt

         1660158 function calls in 208.196 seconds

   Random listing order was used

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    50000    0.023    0.000    0.036    0.000 types.py:171(__get__)
    10000    0.013    0.000    0.020    0.000 tester.py:41(print_loading_bar)
    10000    0.010    0.000    0.022    0.000 enum.py:358(__call__)
    10000    0.012    0.000    0.012    0.000 enum.py:670(__new__)
    50000    0.013    0.000    0.013    0.000 enum.py:792(value)
    70000    0.122    0.000    0.150    0.000 __init__.py:48(create_string_buffer)
        4    0.000    0.000    0.000    0.000 __init__.py:392(__getattr__)
        4    0.000    0.000    0.000    0.000 __init__.py:399(__getitem__)
    10000    0.027    0.000    0.027    0.000 __init__.py:517(cast)
    10000    0.008    0.000    0.008    0.000 fromnumeric.py:71(<dictcomp>)
    10000    0.046    0.000    0.197    0.000 fromnumeric.py:70(_wrapreduction)
    10000    0.002    0.000    0.002    0.000 fromnumeric.py:2907(_prod_dispatcher)
    10000    0.025    0.000    0.223    0.000 fromnumeric.py:2912(prod)
    10000    0.015    0.000    0.253    0.000 <__array_function__ internals>:2(prod)
    10000    0.019    0.000    0.019    0.000 _internal.py:249(__init__)
    10000    0.011    0.000    0.038    0.000 _internal.py:266(data_as)
    10000    0.007    0.000    0.045    0.000 _internal.py:344(_as_parameter_)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:156(_num_fromflags)
    10000    0.078    0.000    0.098    0.000 ctypeslib.py:174(from_param)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:295(<listcomp>)
        1    0.000    0.000    0.000    0.000 ctypeslib.py:225(ndpointer)
    10000    0.208    0.000  171.250    0.017 ni_usb_6211.py:84(read_samples)
    10000    0.058    0.000  186.105    0.019 ni_usb_6211.py:94(write_sample)
    10000    0.002    0.000    0.002    0.000 ni_usb_6211.py:116(get_reference_voltage)
    10000    0.003    0.000    0.003    0.000 ni_usb_6211.py:119(get_measured_output_voltage)
    40000    0.120    0.000    0.120    0.000 errors.py:114(check_for_error)
    20000    0.042    0.000    0.071    0.000 errors.py:144(is_string_buffer_too_small)
    10000    0.018    0.000    0.023    0.000 _lib.py:50(from_param)
    10000    0.014    0.000    0.112    0.000 _lib.py:73(from_param)
        1    0.000    0.000    0.000    0.000 _lib.py:59(wrapped_ndpointer)
    40000    0.028    0.000    0.062    0.000 _lib.py:137(__getattr__)
    40000    0.013    0.000    0.013    0.000 _lib.py:163(windll)
        4    0.000    0.000    0.000    0.000 _lib.py:175(task_handle)
    10000    0.007    0.000    0.007    0.000 channel.py:25(__init__)
    10000    0.163    0.000    0.239    0.000 channel.py:91(_factory)
    10000    0.011    0.000    0.086    0.000 channel.py:152(channel_names)
    10000    0.005    0.000    0.005    0.000 task.py:397(_calculate_num_samps_per_chan)
    10000    0.008    0.000    0.008    0.000 utils.py:131(<listcomp>)
    10000    0.042    0.000    0.075    0.000 utils.py:113(unflatten_channel_string)
    10000    0.181    0.000    0.583    0.000 in_stream.py:192(channels_to_read)
    10000  169.777    0.017  170.267    0.017 read_functions.py:15(_read_analog_f_64)
    10000   14.713    0.001   14.783    0.001 write_functions.py:37(_write_analog_scalar_f_64)
    10000    0.015    0.000   14.798    0.001 stream_writers.py:242(write_one_sample)
    10000    0.035    0.000    0.707    0.000 stream_readers.py:58(_verify_array)
    10000    0.036    0.000  171.016    0.017 stream_readers.py:253(read_many_sample)
    10000    0.076    0.000   22.063    0.002 serial_device.py:64(read_sample)
    10000    0.006    0.000    0.008    0.000 serialutil.py:56(to_bytes)
    50000    0.009    0.000    0.009    0.000 serialutil.py:355(timeout)
    10000    0.009    0.000    0.128    0.000 serialutil.py:590(flushOutput)
    50000   19.140    0.000   19.284    0.000 serialwin32.py:262(read)
    10000    2.471    0.000    2.493    0.000 serialwin32.py:303(write)
    10000    0.119    0.000    0.119    0.000 serialwin32.py:357(reset_output_buffer)
        8    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
    10000    0.003    0.000    0.003    0.000 {built-in method time.perf_counter_ns}
    10000    0.067    0.000   19.352    0.002 {method 'readline' of '_io._IOBase' objects}
    20000    0.009    0.000    0.009    0.000 {method 'decode' of 'bytes' objects}
    10000    0.003    0.000    0.003    0.000 {method 'items' of 'dict' objects}
    20000    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
    20000    0.010    0.000    0.010    0.000 {method 'encode' of 'str' objects}
    10000    0.007    0.000    0.007    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
    20000    0.009    0.000    0.009    0.000 {method 'find' of 'str' objects}
    40002    0.010    0.000    0.010    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
    50000    0.025    0.000    0.025    0.000 {built-in method builtins.getattr}
    40004    0.014    0.000    0.014    0.000 {built-in method builtins.hasattr}
   170007    0.022    0.000    0.022    0.000 {built-in method builtins.isinstance}
    30001    0.009    0.000    0.009    0.000 {built-in method builtins.len}
      100    0.007    0.000    0.007    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
    70000    0.010    0.000    0.010    0.000 {built-in method sys.audit}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
    10000    0.026    0.000    0.026    0.000 {built-in method numpy.zeros}
    10000    0.013    0.000    0.236    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    10000    0.136    0.000    0.136    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        4    0.000    0.000    0.000    0.000 {built-in method _ctypes.POINTER}
   340000    0.048    0.000    0.048    0.000 {built-in method _ctypes.byref}